{
  "version": 3,
  "sources": ["../../../worker.js", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-24vvts/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-24vvts/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/.wrangler/tmp/dev-ilJWhJ",
  "sourcesContent": ["// AbortController polyfill for Cloudflare Workers\nif (typeof globalThis.AbortController === 'undefined') {\n  globalThis.AbortController = class AbortController {\n    constructor() {\n      this.signal = { aborted: false };\n    }\n    abort() {\n      this.signal.aborted = true;\n    }\n  };\n}\n\n// Simple template engine (no external dependencies)\nclass SimpleTemplate {\n  static compile(template) {\n    return function(data) {\n      let result = template;\n      \n      // Handle {{#each}} blocks\n      result = result.replace(/\\{\\{#each\\s+(\\w+)\\}\\}([\\s\\S]*?)\\{\\{\\/each\\}\\}/g, (match, arrayKey, blockTemplate) => {\n        const array = data[arrayKey] || [];\n        return array.map(item => {\n          let blockResult = blockTemplate;\n          // Replace variables in the block\n          blockResult = blockResult.replace(/\\{\\{([^}]+)\\}\\}/g, (varMatch, key) => {\n            const trimmedKey = key.trim();\n            if (trimmedKey.startsWith('{')) {\n              // Handle unescaped content like {{{starsHtml}}}\n              const unescapedKey = trimmedKey.slice(1, -1).trim();\n              return item[unescapedKey] || '';\n            }\n            return item[trimmedKey] || '';\n          });\n          return blockResult;\n        }).join('');\n      });\n      \n      // Handle simple variables\n      result = result.replace(/\\{\\{([^}]+)\\}\\}/g, (match, key) => {\n        const trimmedKey = key.trim();\n        if (trimmedKey.startsWith('{')) {\n          // Handle unescaped content like {{{starsHtml}}}\n          const unescapedKey = trimmedKey.slice(1, -1).trim();\n          return data[unescapedKey] || '';\n        }\n        return data[trimmedKey] || '';\n      });\n      \n      return result;\n    };\n  }\n}\n\n// Simple Templates (no external dependencies)\nconst BROKER_CARD_TEMPLATE = SimpleTemplate.compile(`\n<article class=\"company-card\" data-position=\"{{position}}\" data-broker-id=\"{{brokerId}}\">\n  <div class=\"company-logo\">\n    <div class=\"company-logo-container\" style=\"background: {{logoColor}}\">\n      <span class=\"broker-name\">{{name}}</span>\n    </div>\n  </div>\n  <div class=\"company-info\">\n    <div class=\"company-rating\">\n      <div class=\"company-stars\">{{{starsHtml}}}</div>\n    </div>\n    <div class=\"company-license\">\n      <div class=\"company-license-label\">\u0627\u0644\u062A\u0631\u0627\u062E\u064A\u0635</div>\n      <div class=\"company-license-value\">{{license}}</div>\n    </div>\n    <div class=\"company-details\">\n      <div class=\"company-min-deposit\">\u0623\u0642\u0644 \u0645\u0628\u0644\u063A \u0644\u0644\u0625\u064A\u062F\u0627\u0639</div>\n      <div class=\"company-deposit-amount\">{{minDeposit}}</div>\n    </div>\n  </div>\n  <button class=\"company-open-account-btn\">\u0641\u062A\u062D \u062D\u0633\u0627\u0628</button>\n</article>\n`);\n\nconst BEGINNER_BROKER_TEMPLATE = SimpleTemplate.compile(`\n<div class=\"broker-table-container\">\n  <h3 class=\"table-title\">\u0623\u0641\u0636\u0644 \u0634\u0631\u0643\u0627\u062A \u0627\u0644\u062A\u062F\u0627\u0648\u0644 \u0644\u0644\u0645\u0628\u062A\u062F\u0626\u064A\u0646</h3>\n  <div class=\"broker-table\">\n    <div class=\"table-header\">\n      <div class=\"header-cell\">\u0627\u0644\u0634\u0631\u0643\u0629</div>\n      <div class=\"header-cell\">\u0623\u0642\u0644 \u0645\u0628\u0644\u063A \u0644\u0644\u0625\u064A\u062F\u0627\u0639</div>\n      <div class=\"header-cell\">\u0627\u0644\u062A\u0642\u064A\u064A\u0645</div>\n      <div class=\"header-cell\">\u0627\u0644\u0625\u062C\u0631\u0627\u0621</div>\n    </div>\n    {{#each brokers}}\n    <div class=\"table-row\">\n      <div class=\"table-cell broker-name-cell\">\n        <div class=\"broker-logo-small\" style=\"background: {{logoColor}}\">{{name}}</div>\n        <span class=\"broker-name-text\">{{name}}</span>\n      </div>\n      <div class=\"table-cell\">{{minDeposit}}</div>\n      <div class=\"table-cell\">\n        <div class=\"rating-stars\">{{{starsHtml}}}</div>\n      </div>\n      <div class=\"table-cell\">\n        <button class=\"action-btn\">\u0641\u062A\u062D \u062D\u0633\u0627\u0628</button>\n      </div>\n    </div>\n    {{/each}}\n  </div>\n</div>\n`);\n\nconst POPULAR_BROKER_TEMPLATE = SimpleTemplate.compile(`\n<div class=\"broker-table-container\">\n  <h3 class=\"table-title\">\u0623\u0634\u0647\u0631 \u0634\u0631\u0643\u0627\u062A \u0627\u0644\u062A\u062F\u0627\u0648\u0644</h3>\n  <div class=\"broker-table\">\n    <div class=\"table-header\">\n      <div class=\"header-cell\">\u0627\u0644\u0634\u0631\u0643\u0629</div>\n      <div class=\"header-cell\">\u0639\u062F\u062F \u0627\u0644\u0645\u0633\u062A\u062B\u0645\u0631\u064A\u0646</div>\n      <div class=\"header-cell\">\u0633\u0646\u0629 \u0627\u0644\u062A\u0623\u0633\u064A\u0633</div>\n      <div class=\"header-cell\">\u0627\u0644\u0625\u062C\u0631\u0627\u0621</div>\n    </div>\n    {{#each brokers}}\n    <div class=\"table-row\">\n      <div class=\"table-cell broker-name-cell\">\n        <div class=\"broker-logo-small\" style=\"background: {{logoColor}}\">{{name}}</div>\n        <span class=\"broker-name-text\">{{name}}</span>\n      </div>\n      <div class=\"table-cell\">{{investorCount}}</div>\n      <div class=\"table-cell\">{{foundingYear}}</div>\n      <div class=\"table-cell\">\n        <button class=\"action-btn\">\u0641\u062A\u062D \u062D\u0633\u0627\u0628</button>\n      </div>\n    </div>\n    {{/each}}\n  </div>\n</div>\n`);\n\n// Helper functions for templates\nfunction generateStarsHtml(rating = 4) {\n  const stars = Math.min(Math.max(Math.round(rating), 1), 5);\n  return Array(stars)\n    .fill()\n    .map(() => `\n      <svg class=\"company-star\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"#2563eb\">\n        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n      </svg>\n    `)\n    .join('');\n}\n\nfunction getBrokerLogoColor(brokerName) {\n  const colors = {\n    'Exness': '#fbbf24',\n    'eVest': '#1e40af', \n    'Evest': '#1e40af',\n    'XTB': '#dc2626',\n    'AvaTrade': '#4f46e5',\n    'default': '#6b7280'\n  };\n  return colors[brokerName] || colors.default;\n}\n\n// Cache monitoring and analytics system\nclass CacheMonitor {\n  constructor(env) {\n    this.env = env;\n    this.metrics = {\n      hits: 0,\n      misses: 0,\n      errors: 0,\n      countries: new Map(),\n      routes: new Map(),\n    };\n  }\n\n  // Track cache performance\n  async trackCacheHit(country, route, _cacheKey) {\n    this.metrics.hits++;\n    this.trackCountry(country);\n    this.trackRoute(route);\n\n    // Store metrics in KV for persistence\n    await this.persistMetrics();\n  }\n\n  async trackCacheMiss(country, route, reason = 'expired') {\n    this.metrics.misses++;\n    this.trackCountry(country);\n    this.trackRoute(route);\n\n    console.log(`Cache miss for ${country}/${route}: ${reason}`);\n    await this.persistMetrics();\n  }\n\n  trackCountry(country) {\n    const count = this.metrics.countries.get(country) || 0;\n    this.metrics.countries.set(country, count + 1);\n  }\n\n  trackRoute(route) {\n    const count = this.metrics.routes.get(route) || 0;\n    this.metrics.routes.set(route, count + 1);\n  }\n\n  async persistMetrics() {\n    try {\n      const metricsData = {\n        timestamp: Date.now(),\n        hits: this.metrics.hits,\n        misses: this.metrics.misses,\n        hitRate:\n          this.metrics.hits / (this.metrics.hits + this.metrics.misses) || 0,\n        countries: Object.fromEntries(this.metrics.countries),\n        routes: Object.fromEntries(this.metrics.routes),\n      };\n\n      // Store in KV with 24h TTL\n      await this.env.CACHE?.put('metrics:daily', JSON.stringify(metricsData), {\n        expirationTtl: 86400,\n      });\n  } catch (_error) {\n    console.error('Failed to persist metrics:', _error);\n  }\n  }\n\n  async getMetrics() {\n    try {\n      const cached = await this.env.CACHE?.get('metrics:daily', {\n        type: 'json',\n      });\n      return cached || this.metrics;\n    } catch {\n      return this.metrics;\n    }\n  }\n\n  // Generate cache health report\n  async generateHealthReport() {\n    const metrics = await this.getMetrics();\n    const hitRate = (metrics.hits / (metrics.hits + metrics.misses)) * 100 || 0;\n\n    return {\n      status: hitRate > 70 ? 'healthy' : hitRate > 50 ? 'warning' : 'critical',\n      hitRate: `${hitRate.toFixed(2)}%`,\n      totalRequests: metrics.hits + metrics.misses,\n      topCountries: Object.entries(metrics.countries || {})\n        .sort(([, a], [, b]) => b - a)\n        .slice(0, 5),\n      topRoutes: Object.entries(metrics.routes || {})\n        .sort(([, a], [, b]) => b - a)\n        .slice(0, 5),\n      recommendations: this.generateRecommendations(hitRate, metrics),\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  generateRecommendations(hitRate, metrics) {\n    const recommendations = [];\n\n    if (hitRate < 50) {\n      recommendations.push(\n        'Consider increasing cache TTL for static broker data'\n      );\n    }\n\n    if (metrics.misses > metrics.hits * 2) {\n      recommendations.push(\n        'Review cache invalidation strategy - too many cache misses'\n      );\n    }\n\n    if (hitRate > 90) {\n      recommendations.push(\n        'Excellent cache performance! Consider expanding cache coverage'\n      );\n    }\n\n    return recommendations;\n  }\n}\n\n// Enhanced Cloudflare Worker with improved caching strategies and monitoring\nexport default {\n  async fetch(request, env, ctx) {\n    const startTime = Date.now();\n    const timings = {};\n    const monitor = new CacheMonitor(env);\n\n    try {\n      const url = new URL(request.url);\n      const userCountry = request.cf?.country || 'US';\n      const cacheKey = `broker-data-${userCountry}-v2`;\n\n      // Health check endpoint\n      if (url.pathname === '/__health') {\n        const healthReport = await monitor.generateHealthReport();\n        return new Response(JSON.stringify(healthReport, null, 2), {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      }\n\n      // Metrics endpoint\n      if (url.pathname === '/__metrics') {\n        const metrics = await monitor.getMetrics();\n        return new Response(JSON.stringify(metrics, null, 2), {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      }\n\n      // Enhanced cache purge endpoint\n      if (url.pathname === '/__purge-cache' && request.method === 'POST') {\n        return handleCachePurge(request, url, env);\n      }\n\n      // Cache warming endpoint\n      if (url.pathname === '/__warm-cache' && request.method === 'POST') {\n        return handleWarmCache(request, env);\n      }\n\n      // Debug endpoint (useful for development)\n      if (url.pathname === '/__debug') {\n        return handleDebug(env, request);\n      }\n\n      // Cache status endpoint\n      if (url.pathname === '/__cache-status') {\n        return handleCacheStatus(env, request, userCountry);\n      }\n\n      // Cache debug endpoint\n      if (url.pathname === '/__cache-debug') {\n        return handleCacheDebug(env, request, userCountry);\n      }\n\n      // Performance debug endpoint\n      if (url.pathname === '/__perf-debug') {\n        return handlePerfDebug(env, request, userCountry);\n      }\n\n      // Skip processing for static assets with enhanced detection\n      if (isStaticAsset(url.pathname)) {\n        return fetch(request);\n      }\n\n      // Skip specific pages that don't need broker data\n      const excludedPages = [\n        '/admin',\n        '/login', \n        '/contact',\n        '/privacy-policy',\n        '/terms-of-service',\n        '/dashboard',\n        '/cache-analyzer'\n      ];\n\n      if (excludedPages.includes(url.pathname)) {\n        return fetch(request);\n      }\n\n      timings.staticCheck = Date.now() - startTime;\n\n      // Process all other pages\n\n      // Try to get cached broker data first\n      const cacheCheckStart = Date.now();\n      let brokerData = await getCachedBrokerData(env.CACHE, cacheKey);\n      let unsupportedBrokers = [];\n      const cacheHit = !!brokerData;\n      timings.cacheCheck = Date.now() - cacheCheckStart;\n\n      if (!brokerData) {\n        // Cache miss - track and fetch fresh data\n        await monitor.trackCacheMiss(userCountry, url.pathname, 'not-found');\n\n        const dataFetchStart = Date.now();\n        [brokerData, unsupportedBrokers] = await Promise.all([\n          getBrokersForCountryOptimized(env.DB, userCountry),\n          getUnsupportedBrokersOptimized(env.DB, userCountry),\n        ]);\n        timings.dataFetch = Date.now() - dataFetchStart;\n\n        // Cache the broker data with configurable TTL\n        await cacheBrokerData(\n          env.CACHE,\n          cacheKey,\n          { brokerData, unsupportedBrokers },\n          env.BROKER_CACHE_TTL || 1800\n        );\n      } else {\n        // Cache hit - track success\n        await monitor.trackCacheHit(userCountry, url.pathname, cacheKey);\n\n        unsupportedBrokers = brokerData.unsupportedBrokers || [];\n        brokerData = brokerData.brokerData || [];\n        timings.dataFetch = 0; // No data fetch needed\n      }\n\n      const processingTime = Date.now() - startTime;\n\n      // Fetch original page with edge caching\n      const cacheKeyForPage = `page-${url.pathname}-${userCountry}`;\n      let response = await env.CACHE?.get(cacheKeyForPage, { type: 'stream' });\n\n      if (!response) {\n        const originalResponse = await fetch(request);\n        if (!originalResponse.ok) {\n          return originalResponse;\n        }\n\n        // Store in cache for 1 hour\n        ctx.waitUntil(\n          env.CACHE?.put(cacheKeyForPage, originalResponse.clone(), {\n            expirationTtl: 3600, // 1 hour\n          })\n        );\n\n        response = originalResponse;\n      }\n\n      // Only process HTML responses\n      const contentType = response.headers.get('content-type') || '';\n      if (!contentType.includes('text/html')) {\n        return response;\n      }\n\n      // Get HTML and inject broker data\n      let html = await response.text();\n      html = injectBrokerData(\n        html,\n        brokerData,\n        userCountry,\n        unsupportedBrokers\n      );\n\n      console.log(\n        `Processing ${url.pathname} for country ${userCountry}, found ${unsupportedBrokers.length} restrictions`\n      );\n\n      // Return with enhanced cache headers\n      return new Response(html, {\n        status: 200,\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8',\n          'Cache-Control':\n            'public, max-age=1800, s-maxage=3600, stale-while-revalidate=300',\n          'X-Country-Code': userCountry,\n          'X-Broker-Count': brokerData.length.toString(),\n          'X-Unsupported-Count': unsupportedBrokers.length.toString(),\n          'X-Cache-Key': cacheKey,\n          'X-Cache-Hit': cacheHit.toString(),\n          'X-Processing-Time': processingTime.toString(),\n          'X-Timing-Cache': `${timings.cacheCheck}ms`,\n          'X-Timing-Data': `${timings.dataFetch}ms`,\n          'X-Timing-Route': `${timings.routeCheck}ms`,\n          Vary: 'CF-IPCountry',\n          'X-Frame-Options': 'SAMEORIGIN',\n          'X-Content-Type-Options': 'nosniff',\n          'Last-Modified': new Date().toUTCString(),\n          ETag: `\"${generateETag(brokerData, userCountry)}\"`,\n          'CF-Cache-Tag': `country:${userCountry},page:${url.pathname.replace(/[^a-zA-Z0-9]/g, '-')}`,\n          'Edge-Cache-Tag': `broker-page-${userCountry}`,\n        },\n      });\n    } catch (error) {\n      monitor.metrics.errors++;\n      await monitor.persistMetrics();\n\n      console.error('Worker error:', error);\n      // Enhanced error handling with fallback\n      return createErrorResponse(error, request);\n    }\n  },\n};\n\n// Enhanced caching functions\nasync function getCachedBrokerData(cache, key) {\n  try {\n    if (!cache) return null;\n\n    const cached = await cache.get(key, { type: 'json' });\n    if (cached && cached.timestamp && Date.now() - cached.timestamp < 1800000) {\n      // 30 min\n      return cached.data;\n    }\n    return null;\n  } catch (error) {\n    console.error('Cache read error:', error);\n    return null;\n  }\n}\n\nasync function cacheBrokerData(cache, key, data, ttl = 1800) {\n  try {\n    if (!cache) return;\n\n    await cache.put(\n      key,\n      JSON.stringify({\n        data,\n        timestamp: Date.now(),\n      }),\n      {\n        expirationTtl: ttl, // Configurable TTL\n      }\n    );\n  } catch (error) {\n    console.error('Cache write error:', error);\n  }\n}\n\n// Enhanced static asset detection\nfunction isStaticAsset(pathname) {\n  const staticExtensions = [\n    '.css',\n    '.js',\n    '.png',\n    '.jpg',\n    '.jpeg',\n    '.gif',\n    '.svg',\n    '.ico',\n    '.woff',\n    '.woff2',\n    '.ttf',\n    '.eot',\n    '.pdf',\n    '.zip',\n    '.mp4',\n    '.webm',\n    '.webp',\n    '.avif',\n    '.map',\n    '.xml',\n    '.txt',\n    '.json',\n    '.wasm',\n  ];\n\n  const staticPaths = [\n    '/_astro/',\n    '/images/',\n    '/assets/',\n    '/static/',\n    '/public/',\n    '/favicon.',\n    '/robots.txt',\n    '/sitemap.xml',\n    '/manifest.json',\n    '/.well-known/',\n    '/sw.js',\n    '/workbox-',\n  ];\n\n  const lowerPath = pathname.toLowerCase();\n\n  return (\n    staticExtensions.some(ext => lowerPath.endsWith(ext)) ||\n    staticPaths.some(path => lowerPath.includes(path.toLowerCase()))\n  );\n}\n\n// Enhanced error response\nfunction createErrorResponse(error, originalRequest) {\n  const isHTMLRequest = originalRequest.headers\n    .get('accept')\n    ?.includes('text/html');\n\n  if (isHTMLRequest) {\n    return new Response(\n      `\n      <html>\n        <head><title>\u062E\u0637\u0623 \u0645\u0624\u0642\u062A</title></head>\n        <body style=\"font-family: Arial, sans-serif; text-align: center; padding: 2rem;\">\n          <h1>\u062E\u0637\u0623 \u0645\u0624\u0642\u062A \u0641\u064A \u0627\u0644\u062E\u062F\u0645\u0629</h1>\n          <p>\u0646\u0639\u062A\u0630\u0631 \u0639\u0646 \u0627\u0644\u0625\u0632\u0639\u0627\u062C\u060C \u064A\u0631\u062C\u0649 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062E\u0631\u0649 \u062E\u0644\u0627\u0644 \u0628\u0636\u0639 \u062F\u0642\u0627\u0626\u0642.</p>\n          <button onclick=\"location.reload()\">\u0625\u0639\u0627\u062F\u0629 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629</button>\n        </body>\n      </html>\n    `,\n      {\n        status: 503,\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8',\n          'Cache-Control': 'no-cache',\n        },\n      }\n    );\n  }\n\n  return new Response(\n    JSON.stringify({\n      error: 'Service temporarily unavailable',\n      message: '\u064A\u0631\u062C\u0649 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062E\u0631\u0649 \u0644\u0627\u062D\u0642\u0627\u064B',\n    }),\n    {\n      status: 503,\n      headers: { 'Content-Type': 'application/json' },\n    }\n  );\n}\n\n// Enhanced cache purge with multiple cache layers\nasync function handleCachePurge(request, url, env) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n    if (authHeader !== `Bearer ${env.PURGE_TOKEN}`) {\n      return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const body = await request.json().catch(() => ({}));\n    const { pattern = '*', country = null } = body;\n\n    // Purge broker data cache\n    if (env.CACHE) {\n      if (country) {\n        await env.CACHE.delete(`broker-data-${country}-v2`);\n      } else {\n        // Purge all country-specific cache keys\n        const countries = [\n          'US',\n          'GB',\n          'DE',\n          'SA',\n          'AE',\n          'EG',\n          'TH',\n          'FR',\n          'IT',\n          'ES',\n        ];\n        await Promise.all(\n          countries.map(c => env.CACHE.delete(`broker-data-${c}-v2`))\n        );\n      }\n\n      // Purge page cache\n      if (pattern !== '*') {\n        await env.CACHE.delete(`page-${pattern}-${country || 'US'}`);\n      }\n    }\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        message: 'Cache purged successfully',\n        purged_pattern: pattern,\n        purged_country: country || 'all',\n      }),\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        error: error.message,\n        success: false,\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\n// Check if route should get dynamic processing (OPTIMIZED)\nasync function checkDynamicRoute(database, pathname) {\n  try {\n    // Always process if no database\n    if (!database) return true;\n\n    const decodedPath = decodeURIComponent(pathname);\n\n    // OPTIMIZATION 1: Check hardcoded common routes first (0ms)\n    const commonRoutes = [\n      '\u0634\u0631\u0643\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0645\u0631\u062E\u0635\u0629-\u0641\u064A-\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629',\n      '\u0645\u0646\u0635\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0627\u0644\u0639\u0645\u0644\u0627\u062A-\u0627\u0644\u0631\u0642\u0645\u064A\u0629-\u0641\u064A-\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A',\n      'reviews',\n      'brokers',\n      'trading-companies',\n    ];\n\n    for (const route of commonRoutes) {\n      if (decodedPath.includes(route)) {\n        return true;\n      }\n    }\n\n    // OPTIMIZATION 2: Exact match check first (fast with index)\n    const exactQuery = `SELECT 1 FROM dynamic_routes WHERE route_pattern = ? AND is_active = 1 LIMIT 1`;\n    let result = await database.prepare(exactQuery).bind(decodedPath).first();\n    if (result) return true;\n\n    // OPTIMIZATION 3: Pattern matching fallback (slower but comprehensive)\n    const patternQuery = `SELECT 1 FROM dynamic_routes WHERE is_active = 1 AND (? LIKE '%' || route_pattern || '%') LIMIT 1`;\n    result = await database.prepare(patternQuery).bind(decodedPath).first();\n\n    return !!result;\n  } catch (error) {\n    console.error('Error checking dynamic route:', error);\n    // Fallback pattern matching for common terms\n    const decodedPath = decodeURIComponent(pathname);\n    return (\n      decodedPath.includes('\u062A\u062F\u0627\u0648\u0644') ||\n      decodedPath.includes('broker') ||\n      decodedPath.includes('review')\n    );\n  }\n}\n\n// Get brokers for specific country from database (OPTIMIZED)\nasync function getBrokersForCountry(database, countryCode) {\n  try {\n    // OPTIMIZATION: Simplified query focusing on essential data\n    const query = `\n      SELECT \n        b.id, b.name, b.logo, b.rating, b.min_deposit, b.description,\n        b.investor_count, b.founding_year,\n        COALESCE(cs.sort_order, b.default_sort_order) as sort_order\n      FROM brokers b\n      LEFT JOIN country_sorting cs ON b.id = cs.broker_id AND cs.country_code = ?\n      WHERE b.is_active = 1\n      ORDER BY COALESCE(cs.sort_order, b.default_sort_order) ASC\n      LIMIT 6\n    `;\n\n    const result = await database.prepare(query).bind(countryCode).all();\n\n    if (result.results && result.results.length > 0) {\n      return result.results;\n    }\n\n    // Fallback to default brokers if no country-specific data\n    return getDefaultBrokers();\n  } catch (error) {\n    console.error('Database error:', error);\n    return getHardcodedBrokers();\n  }\n}\n\n// Get unsupported brokers for specific country\nasync function getUnsupportedBrokers(database, countryCode) {\n  try {\n    if (!database) return [];\n\n    const query = `\n      SELECT \n        uc.broker_id,\n        uc.company_id,\n        b.name as broker_name,\n        uc.restriction_type,\n        uc.reason,\n        ab.id as alternative_id,\n        ab.name as alternative_name,\n        ab.logo as alternative_logo,\n        ab.website_url as alternative_url\n      FROM unsupported_countries uc\n      JOIN brokers b ON uc.broker_id = b.id\n      LEFT JOIN brokers ab ON uc.alternative_broker_id = ab.id\n      WHERE uc.country_code = ? AND uc.is_active = 1\n    `;\n\n    const result = await database.prepare(query).bind(countryCode).all();\n\n    if (result.results) {\n      return result.results;\n    }\n\n    return [];\n  } catch (error) {\n    console.error('Error fetching unsupported brokers:', error);\n    return [];\n  }\n}\n\n// Get default brokers when no country-specific data\nfunction getDefaultBrokers() {\n  return [\n    {\n      id: 1,\n      name: 'Exness',\n      rating: 4.5,\n      min_deposit: 10,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u0648\u062B\u0648\u0642',\n    },\n    {\n      id: 2,\n      name: 'XTB',\n      rating: 4.0,\n      min_deposit: 100,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u0646\u0638\u0645',\n    },\n    {\n      id: 3,\n      name: 'AvaTrade',\n      rating: 4.0,\n      min_deposit: 100,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0639\u0627\u0644\u0645\u064A',\n    },\n    {\n      id: 4,\n      name: 'Evest',\n      rating: 4.5,\n      min_deposit: 50,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u062A\u0642\u062F\u0645',\n    },\n  ];\n}\n\n// Hardcoded fallback brokers\nfunction getHardcodedBrokers() {\n  return [\n    {\n      id: 1,\n      name: 'Exness',\n      rating: 4.5,\n      min_deposit: 10,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u0648\u062B\u0648\u0642 \u0644\u0644\u062A\u062F\u0627\u0648\u0644',\n      investor_count: '3.1M+',\n      founding_year: '2008',\n    },\n    {\n      id: 2,\n      name: 'XTB',\n      rating: 4.0,\n      min_deposit: 100,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u0646\u0638\u0645 \u0648\u0645\u0631\u062E\u0635',\n      investor_count: '1.8M+',\n      founding_year: '2002',\n    },\n    {\n      id: 3,\n      name: 'AvaTrade',\n      rating: 4.0,\n      min_deposit: 100,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0639\u0627\u0644\u0645\u064A \u0645\u0648\u062B\u0648\u0642',\n      investor_count: '1.2M+',\n      founding_year: '2006',\n    },\n    {\n      id: 4,\n      name: 'Evest',\n      rating: 4.5,\n      min_deposit: 50,\n      logo: '',\n      description: '\u0648\u0633\u064A\u0637 \u0645\u062A\u0642\u062F\u0645 \u0648\u0645\u0628\u062A\u0643\u0631',\n      investor_count: '2.5M+',\n      founding_year: '2018',\n    },\n  ];\n}\n\n// Inject broker data into HTML\nfunction injectBrokerData(html, brokers, countryCode, unsupportedBrokers = []) {\n  try {\n    // Create country data script\n    const countryName = getCountryName(countryCode);\n    const countryDataScript = `\n    <script>\n        window.USER_COUNTRY = '${countryCode}';\n        window.COUNTRY_NAME = '${countryName}';\n        window.UNSUPPORTED_BROKERS = ${JSON.stringify(unsupportedBrokers)};\n        console.log('Worker injected data:', {\n          country: '${countryCode}',\n          brokers: ${brokers.length},\n          unsupported: ${unsupportedBrokers.length}\n        });\n    </script>\n  `;\n\n    // Try to inject in head, otherwise before closing body\n    if (html.includes('</head>')) {\n      html = html.replace('</head>', `${countryDataScript}</head>`);\n    } else {\n      // Fallback: inject at the beginning of body\n      html = html.replace('<body>', `<body>${countryDataScript}`);\n    }\n\n    // Handle broker placeholder if it exists\n    const brokerPlaceholder = '<!-- BROKERS_PLACEHOLDER -->';\n    if (html.includes(brokerPlaceholder)) {\n      const brokerHtml = generateBrokerHtml(brokers, countryCode);\n      html = html.replace(brokerPlaceholder, brokerHtml);\n    }\n\n    // Handle beginner brokers placeholder if it exists\n    const beginnerPlaceholder = '<!-- BEGINNER_BROKERS_PLACEHOLDER -->';\n    if (html.includes(beginnerPlaceholder)) {\n      const beginnerHtml = generateBeginnerBrokerHtml(brokers, countryCode);\n      html = html.replace(beginnerPlaceholder, beginnerHtml);\n    }\n\n    // Handle [beginner-57] placeholder directly\n    if (html.includes('[beginner-57]')) {\n      const beginnerHtml = generateBeginnerBrokerHtml(brokers, countryCode);\n      html = html.replace(/\\[beginner-57\\]/g, beginnerHtml);\n    }\n\n    // Handle popular brokers placeholder if it exists\n    const popularPlaceholder = '<!-- POPULAR_BROKERS_PLACEHOLDER -->';\n    if (html.includes(popularPlaceholder)) {\n      const popularHtml = generatePopularBrokerHtml(brokers, countryCode);\n      html = html.replace(popularPlaceholder, popularHtml);\n    }\n\n    // Handle [popular-58] placeholder directly\n    if (html.includes('[popular-58]')) {\n      const popularHtml = generatePopularBrokerHtml(brokers, countryCode);\n      html = html.replace(/\\[popular-58\\]/g, popularHtml);\n    }\n\n    return html;\n  } catch (error) {\n    console.error('Error injecting broker data:', error);\n    return html;\n  }\n}\n\n// Generate broker HTML using Handlebars\nfunction generateBrokerHtml(brokers, _countryCode) {\n  if (!brokers || brokers.length === 0) {\n    return `\n      <div style=\"text-align: center; padding: 2rem; color: #6b7280; background: #f9fafb; border-radius: 0.5rem;\">\n        <p>\u0644\u0627 \u062A\u0648\u062C\u062F \u0634\u0631\u0643\u0627\u062A \u062A\u062F\u0627\u0648\u0644 \u0645\u062A\u0627\u062D\u0629 \u062D\u0627\u0644\u064A\u0627\u064B \u0641\u064A \u0645\u0646\u0637\u0642\u062A\u0643.</p>\n      </div>\n    `;\n  }\n\n  const brokerCards = brokers.map((broker, index) => \n    BROKER_CARD_TEMPLATE({\n      name: broker.name,\n      logoColor: getBrokerLogoColor(broker.name),\n      starsHtml: generateStarsHtml(broker.rating),\n      license: 'FCA', // Default license\n      minDeposit: broker.min_deposit || 0,\n      position: index + 1,\n      brokerId: broker.id\n    })\n  ).join('');\n\n  return `<div class=\"companies-grid\">${brokerCards}</div>`;\n}\n\n// Generate beginner broker HTML table using Handlebars\nfunction generateBeginnerBrokerHtml(brokers, _countryCode) {\n  if (!brokers || brokers.length === 0) {\n    return `\n      <div style=\"text-align: center; padding: 2rem; color: #6b7280; background: #f9fafb; border-radius: 0.5rem;\">\n        <p>\u0644\u0627 \u062A\u0648\u062C\u062F \u0634\u0631\u0643\u0627\u062A \u062A\u062F\u0627\u0648\u0644 \u0645\u062A\u0627\u062D\u0629 \u062D\u0627\u0644\u064A\u0627\u064B \u0641\u064A \u0645\u0646\u0637\u0642\u062A\u0643.</p>\n      </div>\n    `;\n  }\n\n  const topBrokers = brokers.slice(0, 4).map((broker, index) => ({\n    name: broker.name,\n    logoColor: getBrokerLogoColor(broker.name),\n    minDeposit: broker.min_deposit || 0,\n    rating: broker.rating || 0,\n    starsHtml: generateStarsHtml(broker.rating),\n    position: index + 1,\n    brokerId: broker.id\n  }));\n\n  return BEGINNER_BROKER_TEMPLATE({ brokers: topBrokers });\n}\n\n// Generate popular broker table HTML using Handlebars\nfunction generatePopularBrokerHtml(brokers, _countryCode) {\n  if (!brokers || brokers.length === 0) {\n    return `\n      <div style=\"text-align: center; padding: 2rem; color: #6b7280; background: #f9fafb; border-radius: 0.5rem;\">\n        <p>\u0644\u0627 \u062A\u0648\u062C\u062F \u0634\u0631\u0643\u0627\u062A \u062A\u062F\u0627\u0648\u0644 \u0645\u062A\u0627\u062D\u0629 \u062D\u0627\u0644\u064A\u0627\u064B \u0641\u064A \u0645\u0646\u0637\u0642\u062A\u0643.</p>\n      </div>\n    `;\n  }\n\n  const topBrokers = brokers.slice(0, 4).map((broker, index) => ({\n    name: broker.name,\n    logoColor: getBrokerLogoColor(broker.name),\n    investorCount: broker.investor_count || '1.5M+',\n    foundingYear: broker.founding_year || '2010',\n    position: index + 1,\n    brokerId: broker.id\n  }));\n\n  return POPULAR_BROKER_TEMPLATE({ brokers: topBrokers });\n}\n\n// Duplicate function removed - using the one defined earlier\n\n// Get country name in Arabic\nfunction getCountryName(countryCode = 'SA') {\n  const countryNames = {\n    SA: '\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629',\n    AE: '\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A',\n    KW: '\u0627\u0644\u0643\u0648\u064A\u062A',\n    BH: '\u0627\u0644\u0628\u062D\u0631\u064A\u0646',\n    QA: '\u0642\u0637\u0631',\n    OM: '\u0639\u0645\u0627\u0646',\n    JO: '\u0627\u0644\u0623\u0631\u062F\u0646',\n    LB: '\u0644\u0628\u0646\u0627\u0646',\n    EG: '\u0645\u0635\u0631',\n    MA: '\u0627\u0644\u0645\u063A\u0631\u0628',\n    TN: '\u062A\u0648\u0646\u0633',\n    DZ: '\u0627\u0644\u062C\u0632\u0627\u0626\u0631',\n    IQ: '\u0627\u0644\u0639\u0631\u0627\u0642',\n    SY: '\u0633\u0648\u0631\u064A\u0627',\n    YE: '\u0627\u0644\u064A\u0645\u0646',\n    LY: '\u0644\u064A\u0628\u064A\u0627',\n    SD: '\u0627\u0644\u0633\u0648\u062F\u0627\u0646',\n    US: '\u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629',\n    GB: '\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629',\n    DE: '\u0623\u0644\u0645\u0627\u0646\u064A\u0627',\n    FR: '\u0641\u0631\u0646\u0633\u0627',\n    IT: '\u0625\u064A\u0637\u0627\u0644\u064A\u0627',\n    ES: '\u0625\u0633\u0628\u0627\u0646\u064A\u0627',\n    TH: '\u062A\u0627\u064A\u0644\u0627\u0646\u062F',\n  };\n\n  return countryNames[countryCode] || '\u0628\u0644\u062F\u0643';\n}\n\n// Cache warming function (run via cron trigger)\nexport async function warmCache(env) {\n  const countries = [\n    'US',\n    'GB',\n    'DE',\n    'SA',\n    'AE',\n    'EG',\n    'FR',\n    'ES',\n    'IT',\n    'TH',\n    'KW',\n    'BH',\n    'QA',\n    'OM',\n    'JO',\n  ];\n  const routes = [\n    '/\u0634\u0631\u0643\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0645\u0631\u062E\u0635\u0629-\u0641\u064A-\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629',\n    '/\u0645\u0646\u0635\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0627\u0644\u0639\u0645\u0644\u0627\u062A-\u0627\u0644\u0631\u0642\u0645\u064A\u0629-\u0641\u064A-\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A',\n    '/reviews',\n  ];\n\n  console.log('Starting cache warming...');\n\n  const warmPromises = [];\n\n  for (const country of countries) {\n    for (const route of routes) {\n      warmPromises.push(warmCacheForCountryRoute(env, country, route));\n    }\n  }\n\n  const results = await Promise.allSettled(warmPromises);\n  const successful = results.filter(r => r.status === 'fulfilled').length;\n  const failed = results.filter(r => r.status === 'rejected').length;\n\n  console.log(\n    `Cache warming completed: ${successful} successful, ${failed} failed`\n  );\n\n  // Store warming results in metrics\n  const warmingReport = {\n    timestamp: Date.now(),\n    successful,\n    failed,\n    total: warmPromises.length,\n    countries: countries.length,\n    routes: routes.length,\n  };\n\n  try {\n    await env.CACHE?.put('warming:last-run', JSON.stringify(warmingReport), {\n      expirationTtl: 86400, // 24 hours\n    });\n  } catch (error) {\n    console.error('Failed to store warming report:', error);\n  }\n\n  return warmingReport;\n}\n\nasync function warmCacheForCountryRoute(env, country, route) {\n  try {\n    const cacheKey = `broker-data-${country}-v2`;\n\n    // Check if already cached and fresh\n    const existing = await getCachedBrokerData(env.CACHE, cacheKey);\n    if (existing) {\n      console.log(`Cache already warm for ${country}${route}`);\n      return;\n    }\n\n    // Warm the cache\n    const [brokerData, unsupportedBrokers] = await Promise.all([\n      getBrokersForCountry(env.DB, country),\n      getUnsupportedBrokers(env.DB, country),\n    ]);\n\n    await cacheBrokerData(env.CACHE, cacheKey, {\n      brokerData,\n      unsupportedBrokers,\n    });\n\n    console.log(\n      `\u2705 Warmed cache for ${country}${route} (${brokerData.length} brokers, ${unsupportedBrokers.length} restrictions)`\n    );\n  } catch (error) {\n    console.error(`\u274C Failed to warm cache for ${country}${route}:`, error);\n    throw error;\n  }\n}\n\n// Cache warming endpoint (manual trigger)\nexport async function handleWarmCache(request, env) {\n  try {\n    const authHeader = request.headers.get('Authorization');\n    if (authHeader !== `Bearer ${env.PURGE_TOKEN}`) {\n      return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const warmingResult = await warmCache(env);\n\n    return new Response(\n      JSON.stringify(\n        {\n          success: true,\n          message: 'Cache warming completed',\n          ...warmingResult,\n        },\n        null,\n        2\n      ),\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        error: error.message,\n        success: false,\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\n// Debug handler for development\nasync function handleDebug(env, request) {\n  const url = new URL(request.url);\n  const country =\n    url.searchParams.get('country') || request.cf?.country || 'US';\n\n  try {\n    const debug = {\n      request: {\n        country: request.cf?.country,\n        colo: request.cf?.colo,\n        timezone: request.cf?.timezone,\n        requestedCountry: country,\n        userAgent: request.headers.get('User-Agent'),\n        ip: request.headers.get('CF-Connecting-IP'),\n      },\n      cache: {\n        keys: getCacheKeys(country),\n        brokerDataKey: `broker-data-${country}-v2`,\n      },\n      database: {\n        brokersCount: 0,\n        countrySortingCount: 0,\n        unsupportedCount: 0,\n      },\n      worker: {\n        timestamp: new Date().toISOString(),\n        version: '2.0-enhanced',\n      },\n    };\n\n    // Get database stats\n    try {\n      const [brokersResult, sortingResult, unsupportedResult] =\n        await Promise.all([\n          env.DB.prepare(\n            'SELECT COUNT(*) as count FROM brokers WHERE is_active = 1'\n          ).first(),\n          env.DB.prepare(\n            'SELECT COUNT(*) as count FROM country_sorting WHERE country_code = ?'\n          )\n            .bind(country)\n            .first(),\n          env.DB.prepare(\n            'SELECT COUNT(*) as count FROM unsupported_countries WHERE country_code = ? AND is_active = 1'\n          )\n            .bind(country)\n            .first(),\n        ]);\n\n      debug.database.brokersCount = brokersResult?.count || 0;\n      debug.database.countrySortingCount = sortingResult?.count || 0;\n      debug.database.unsupportedCount = unsupportedResult?.count || 0;\n    } catch (error) {\n      debug.database.error = error.message;\n    }\n\n    // Get cache status\n    try {\n      const cachedData = await getCachedBrokerData(\n        env.CACHE,\n        debug.cache.brokerDataKey\n      );\n      debug.cache.status = {\n        cached: !!cachedData,\n        dataAge: cachedData ? getDataAge(cachedData) : null,\n        brokerCount: cachedData?.brokerData?.length || 0,\n        restrictionCount: cachedData?.unsupportedBrokers?.length || 0,\n      };\n    } catch (error) {\n      debug.cache.error = error.message;\n    }\n\n    return new Response(JSON.stringify(debug, null, 2), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n      },\n    });\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        error: error.message,\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\n// Cache status handler\nasync function handleCacheStatus(env, request, userCountry) {\n  try {\n    const cacheKey = `broker-data-${userCountry}-v2`;\n\n    const [cachedData, metrics] = await Promise.all([\n      getCachedBrokerData(env.CACHE, cacheKey),\n      env.CACHE?.get('metrics:daily', { type: 'json' }),\n    ]);\n\n    const status = {\n      country: userCountry,\n      cacheKey,\n      cached: !!cachedData,\n      dataAge: cachedData ? getDataAge(cachedData) : null,\n      brokerCount: cachedData?.brokerData?.length || 0,\n      restrictionCount: cachedData?.unsupportedBrokers?.length || 0,\n      hitRate: metrics ? calculateHitRate(metrics) : 'N/A',\n      recommendations: generateCacheRecommendations(cachedData, metrics),\n      timestamp: new Date().toISOString(),\n    };\n\n    return new Response(JSON.stringify(status, null, 2), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n      },\n    });\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        error: error.message,\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\n// Helper functions for new endpoints\nfunction getCacheKeys(country) {\n  return [\n    `broker-data-${country}-v2`,\n    `page-/reviews-${country}`,\n    `page-/\u0634\u0631\u0643\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0645\u0631\u062E\u0635\u0629-\u0641\u064A-\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629-${country}`,\n    `page-/\u0645\u0646\u0635\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0627\u0644\u0639\u0645\u0644\u0627\u062A-\u0627\u0644\u0631\u0642\u0645\u064A\u0629-\u0641\u064A-\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A-${country}`,\n    'metrics:daily',\n    'warming:last-run',\n  ];\n}\n\nfunction getDataAge(cachedData) {\n  if (cachedData.timestamp) {\n    const ageMs = Date.now() - cachedData.timestamp;\n    const ageMinutes = Math.floor(ageMs / 60000);\n    const ageHours = Math.floor(ageMinutes / 60);\n\n    if (ageHours > 0) {\n      return `${ageHours}h ${ageMinutes % 60}m`;\n    }\n    return `${ageMinutes}m`;\n  }\n  return 'unknown';\n}\n\nfunction calculateHitRate(metrics) {\n  const total = (metrics.hits || 0) + (metrics.misses || 0);\n  if (total === 0) return 'N/A';\n  return `${(((metrics.hits || 0) / total) * 100).toFixed(1)}%`;\n}\n\nfunction generateCacheRecommendations(cachedData, metrics) {\n  const recommendations = [];\n\n  if (!cachedData) {\n    recommendations.push(\n      'Cache is empty - consider warming cache for this country'\n    );\n  }\n\n  if (metrics) {\n    const hitRate = parseFloat(calculateHitRate(metrics).replace('%', ''));\n    if (hitRate < 50) {\n      recommendations.push('Low hit rate - consider increasing cache TTL');\n    } else if (hitRate > 90) {\n      recommendations.push('Excellent cache performance!');\n    }\n  }\n\n  if (cachedData?.brokerData?.length === 0) {\n    recommendations.push('No broker data found - check database configuration');\n  }\n\n  if (cachedData && getDataAge(cachedData).includes('h')) {\n    recommendations.push('Cache data is getting old - will refresh soon');\n  }\n\n  return recommendations.length > 0\n    ? recommendations\n    : ['Cache performance looks good'];\n}\n\n// Cache debug endpoint for troubleshooting\nasync function handleCacheDebug(env, request, userCountry) {\n  const url = new URL(request.url);\n  const testPath =\n    url.searchParams.get('path') || '/\u0634\u0631\u0643\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0645\u0631\u062E\u0635\u0629-\u0641\u064A-\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629';\n\n  try {\n    const cacheTests = [];\n\n    // Test 1: Check KV cache for broker data\n    const brokerCacheKey = `broker-data-${userCountry}-v2`;\n    const cachedBrokerData = await getCachedBrokerData(\n      env.CACHE,\n      brokerCacheKey\n    );\n    cacheTests.push({\n      test: 'Broker Data Cache (KV)',\n      key: brokerCacheKey,\n      result: cachedBrokerData ? 'FOUND' : 'NOT_FOUND',\n      dataAge: cachedBrokerData ? getDataAge(cachedBrokerData) : 'N/A',\n      brokerCount: cachedBrokerData?.brokerData?.length || 0,\n    });\n\n    // Test 2: Check route processing eligibility\n    const shouldProcess = await checkDynamicRoute(env.DB, testPath);\n    cacheTests.push({\n      test: 'Route Processing',\n      path: testPath,\n      result: shouldProcess ? 'ELIGIBLE' : 'NOT_ELIGIBLE',\n    });\n\n    // Test 3: Check database connectivity\n    let dbTest = { test: 'Database Connectivity', result: 'ERROR' };\n    try {\n      const brokerData = await getBrokersForCountry(env.DB, userCountry);\n      const unsupportedBrokers = await getUnsupportedBrokers(\n        env.DB,\n        userCountry\n      );\n      dbTest = {\n        test: 'Database Connectivity',\n        result: 'SUCCESS',\n        brokerCount: brokerData.length,\n        unsupportedCount: unsupportedBrokers.length,\n      };\n    } catch (error) {\n      dbTest.error = error.message;\n    }\n    cacheTests.push(dbTest);\n\n    // Test 4: Check metrics\n    let metricsTest = { test: 'Metrics Storage', result: 'ERROR' };\n    try {\n      const metrics = await env.CACHE?.get('metrics:daily', { type: 'json' });\n      metricsTest = {\n        test: 'Metrics Storage',\n        result: metrics ? 'FOUND' : 'NOT_FOUND',\n        hits: metrics?.hits || 0,\n        misses: metrics?.misses || 0,\n        hitRate: metrics ? calculateHitRate(metrics) : 'N/A',\n      };\n    } catch (error) {\n      metricsTest.error = error.message;\n    }\n    cacheTests.push(metricsTest);\n\n    const debugInfo = {\n      timestamp: new Date().toISOString(),\n      userCountry,\n      testPath,\n      worker: {\n        version: '2.0-enhanced',\n        environment: env.ENVIRONMENT || 'unknown',\n      },\n      cacheTests,\n      request: {\n        url: request.url,\n        country: request.cf?.country,\n        colo: request.cf?.colo,\n        userAgent: request.headers.get('User-Agent'),\n      },\n      recommendations: generateCacheDebugRecommendations(cacheTests),\n    };\n\n    return new Response(JSON.stringify(debugInfo, null, 2), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n      },\n    });\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        error: error.message,\n        stack: error.stack,\n        timestamp: new Date().toISOString(),\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\nfunction generateCacheDebugRecommendations(cacheTests) {\n  const recommendations = [];\n\n  const brokerCache = cacheTests.find(t => t.test === 'Broker Data Cache (KV)');\n  const routeProcessing = cacheTests.find(t => t.test === 'Route Processing');\n  const dbConnectivity = cacheTests.find(\n    t => t.test === 'Database Connectivity'\n  );\n  const metrics = cacheTests.find(t => t.test === 'Metrics Storage');\n\n  if (brokerCache?.result === 'NOT_FOUND') {\n    recommendations.push('Broker cache empty - first request or cache expired');\n  }\n\n  if (routeProcessing?.result === 'NOT_ELIGIBLE') {\n    recommendations.push(\n      'Route not eligible for processing - check dynamic_routes table'\n    );\n  }\n\n  if (dbConnectivity?.result === 'ERROR') {\n    recommendations.push(\n      'Database connection failed - check D1 binding and database status'\n    );\n  } else if (dbConnectivity?.brokerCount === 0) {\n    recommendations.push('No broker data in database - check brokers table');\n  }\n\n  if (metrics?.result === 'NOT_FOUND') {\n    recommendations.push(\n      'No metrics data - monitoring system may be initializing'\n    );\n  }\n\n  if (recommendations.length === 0) {\n    recommendations.push(\n      'All systems operational - cache and database working correctly'\n    );\n  }\n\n  return recommendations;\n}\n\n// Generate ETag for cache validation\nfunction generateETag(brokerData, country) {\n  const content = JSON.stringify({\n    brokerData: brokerData.map(b => ({ id: b.id, name: b.name })),\n    country,\n    timestamp: Math.floor(Date.now() / 3600000), // Hour-based ETag\n  });\n\n  let hash = 0;\n  for (let i = 0; i < content.length; i++) {\n    const char = content.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash).toString(36);\n}\n\n// Route checking removed - all pages are now processed\n\n// OPTIMIZATION: Single query for broker data with timeout\nasync function getBrokersForCountryOptimized(database, countryCode) {\n  try {\n    // Use prepared statement with timeout\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 1000); // 1 second timeout\n\n    const query = `\n      SELECT \n        b.id, b.name, b.logo, b.rating, b.min_deposit, b.description,\n        b.investor_count, b.founding_year,\n        COALESCE(cs.sort_order, b.default_sort_order) as sort_order\n      FROM brokers b\n      LEFT JOIN country_sorting cs ON b.id = cs.broker_id AND cs.country_code = ?\n      WHERE b.is_active = 1\n      ORDER BY COALESCE(cs.sort_order, b.default_sort_order) ASC\n      LIMIT 6\n    `;\n\n    const result = await database.prepare(query).bind(countryCode).all();\n    clearTimeout(timeoutId);\n\n    if (result.results && result.results.length > 0) {\n      return result.results;\n    }\n\n    // Fast fallback\n    return getHardcodedBrokersOptimized();\n  } catch (error) {\n    console.error(`Optimized broker query failed for ${countryCode}:`, error);\n    return getHardcodedBrokersOptimized();\n  }\n}\n\n// OPTIMIZATION: Cached unsupported brokers with timeout\nasync function getUnsupportedBrokersOptimized(database, countryCode) {\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 800); // 800ms timeout\n\n    const query = `\n      SELECT \n        uc.broker_id, uc.restriction_type, uc.reason,\n        b.name as broker_name,\n        alt.id as alternative_id, alt.name as alternative_name, \n        alt.logo as alternative_logo, alt.website_url as alternative_url\n      FROM unsupported_countries uc\n      JOIN brokers b ON uc.broker_id = b.id\n      LEFT JOIN brokers alt ON uc.alternative_broker_id = alt.id\n      WHERE uc.country_code = ? AND uc.is_active = 1 AND b.is_active = 1\n    `;\n\n    const result = await database.prepare(query).bind(countryCode).all();\n    clearTimeout(timeoutId);\n\n    return result.results || [];\n  } catch (error) {\n    console.error(\n      `Unsupported brokers query failed for ${countryCode}:`,\n      error\n    );\n    return [];\n  }\n}\n\n// OPTIMIZATION: Faster fallback data\nfunction getHardcodedBrokersOptimized() {\n  return [\n    {\n      id: 1,\n      name: 'Exness',\n      rating: 4.5,\n      min_deposit: 10,\n      sort_order: 1,\n      investor_count: '3.1M+',\n      founding_year: '2008',\n    },\n    {\n      id: 2,\n      name: 'eVest',\n      rating: 4.2,\n      min_deposit: 250,\n      sort_order: 2,\n      investor_count: '2.5M+',\n      founding_year: '2018',\n    },\n    {\n      id: 3,\n      name: 'XTB',\n      rating: 4.3,\n      min_deposit: 250,\n      sort_order: 3,\n      investor_count: '1.8M+',\n      founding_year: '2002',\n    },\n    {\n      id: 4,\n      name: 'AvaTrade',\n      rating: 4.1,\n      min_deposit: 100,\n      sort_order: 4,\n      investor_count: '1.2M+',\n      founding_year: '2006',\n    },\n  ];\n}\n\n// Performance debug endpoint\nasync function handlePerfDebug(env, request, userCountry) {\n  const url = new URL(request.url);\n  const testPath =\n    url.searchParams.get('path') || '/\u0634\u0631\u0643\u0627\u062A-\u062A\u062F\u0627\u0648\u0644-\u0645\u0631\u062E\u0635\u0629-\u0641\u064A-\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629';\n\n  const timings = {};\n  const startTime = Date.now();\n\n  // Test database performance\n  const dbStart = Date.now();\n  try {\n    const brokers = await getBrokersForCountryOptimized(env.DB, userCountry);\n    timings.database = Date.now() - dbStart;\n    timings.brokerCount = brokers.length;\n  } catch (error) {\n    timings.database = Date.now() - dbStart;\n    timings.databaseError = error.message;\n  }\n\n  // Route checking removed - all pages are processed\n  timings.routeCheck = 0;\n  timings.shouldProcess = true;\n\n  // Test cache performance\n  const cacheStart = Date.now();\n  if (env.CACHE) {\n    const cacheKey = `perf-test-${Date.now()}`;\n    await env.CACHE.put(cacheKey, 'test', { expirationTtl: 60 });\n    const retrieved = await env.CACHE.get(cacheKey);\n    timings.cache = Date.now() - cacheStart;\n    timings.cacheWorking = !!retrieved;\n    await env.CACHE.delete(cacheKey);\n  } else {\n    timings.cache = 0;\n    timings.cacheWorking = false;\n  }\n\n  // Test monitoring system\n  const monitorStart = Date.now();\n  try {\n    const monitor = new CacheMonitor(env);\n    await monitor.trackCacheHit(userCountry, testPath, 'test-key');\n    timings.monitoring = Date.now() - monitorStart;\n    timings.monitoringWorking = true;\n  } catch (error) {\n    timings.monitoring = Date.now() - monitorStart;\n    timings.monitoringWorking = false;\n    timings.monitoringError = error.message;\n  }\n\n  timings.total = Date.now() - startTime;\n\n  const recommendations = [];\n  if (timings.database > 500)\n    recommendations.push(\n      'Database queries are slow - consider optimizing queries or adding indexes'\n    );\n  if (timings.routeCheck > 100)\n    recommendations.push(\n      'Route checking is slow - route cache should improve this'\n    );\n  if (!timings.cacheWorking)\n    recommendations.push(\n      'Cache is not working - check KV namespace configuration'\n    );\n  if (!timings.monitoringWorking)\n    recommendations.push(\n      'Monitoring system has issues - check CacheMonitor implementation'\n    );\n  if (timings.total > 1000)\n    recommendations.push(\n      'Overall response is slow - consider more aggressive caching'\n    );\n  if (timings.total < 100)\n    recommendations.push(\n      'Excellent performance! All systems running optimally'\n    );\n\n  return new Response(\n    JSON.stringify(\n      {\n        timings,\n        recommendations,\n        country: userCountry,\n        testPath,\n        worker: {\n          version: '2.0-enhanced-perf',\n          environment: env.ENVIRONMENT || 'unknown',\n        },\n        timestamp: new Date().toISOString(),\n      },\n      null,\n      2\n    ),\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  );\n}\n\n// Cron handler for scheduled cache warming\nexport async function scheduled(event, env, _ctx) {\n  try {\n    console.log('Cron trigger: Starting scheduled cache warming');\n\n    // Warm cache for all major countries\n    const result = await warmCache(env);\n\n    console.log('Cron trigger: Cache warming completed', result);\n\n    // Store the warming report\n    if (env.CACHE) {\n      await env.CACHE.put(\n        'warming:last-cron',\n        JSON.stringify({\n          timestamp: new Date().toISOString(),\n          trigger: 'cron',\n          ...result,\n        }),\n        {\n          expirationTtl: 86400, // 24 hours\n        }\n      );\n    }\n  } catch (error) {\n    console.error('Cron trigger: Cache warming failed', error);\n  }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/amrmegahed/amr/MMNow/theqa-astro/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/amrmegahed/amr/MMNow/theqa-astro/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/.wrangler/tmp/bundle-24vvts/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/amrmegahed/amr/MMNow/theqa-astro/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/.wrangler/tmp/bundle-24vvts/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/amrmegahed/amr/MMNow/theqa-astro/broker-proxy-worker/.wrangler/tmp/bundle-24vvts/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
