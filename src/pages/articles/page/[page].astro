---
import BaseLayout from '../../../layouts/BaseLayout.astro';

export const prerender = true;


// Types
interface Article {
  id: number;
  title: string;
  content: string;
  description: string | null;
  category: string | null;
}

interface PaginationLink {
  url: string | null;
  label: string;
  active: boolean;
}

interface ArticlesResponse {
  data: Article[];
  current_page: number;
  last_page: number;
  total: number;
  per_page: number;
  from: number;
  to: number;
  links: PaginationLink[];
  next_page_url: string | null;
  prev_page_url: string | null;
  first_page_url: string;
  last_page_url: string;
  path: string;
}

// Function to fetch articles from API
async function fetchArticles(page = 1): Promise<ArticlesResponse> {
  try {
    const response = await fetch(`https://theqalink.com/api/v1/articles?page=${page}` ,{
      headers: {
        "Accept": "application/json",
        "X-API-Hash": "b3da624e147174b654c4c9358ac40c4ca716cb9db56b0da0e2f8200553922ac0",
        "Authorization": "Basic YWRtaW46U0F3S3EzQUg5bVZxVg==",
        "Cache-Control": "no-cache"
      }
    });
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching articles:', error);
    return {
      data: [],
      current_page: 1,
      last_page: 1,
      total: 0,
      per_page: 20,
      from: 0,
      to: 0,
      links: [],
      next_page_url: null,
      prev_page_url: null,
      first_page_url: '',
      last_page_url: '',
      path: ''
    };
  }
}
export async function getStaticPaths() {
    const lastPage = 14;

const paths: any[] = [];

for (let i = 1; i <= lastPage; i++) {
  paths.push({ params: { page: i.toString() } });
}
  return paths;
}
const { page } = Astro.params;
console.log("Page:", page);
const articlesData = await fetchArticles(page ? parseInt(page) : 1);
const currentPage = 1;
---

<BaseLayout title="المقالات - المدونة العربية" description="تصفح جميع مقالاتنا المتنوعة في المدونة العربية">
  <div class="container">
    <!-- Page Header -->
    <section class="page-header">
      <h1>جميع المقالات</h1>
      <p>اكتشف مجموعة واسعة من المقالات والموضوعات المتنوعة</p>
      <div class="articles-count">
        عرض {articlesData?.from || 0} - {articlesData?.to || 0} من أصل {articlesData?.total || 0} مقال
      </div>
    </section>

    <!-- Articles Grid -->
    <section class="articles-section">
      {articlesData?.data && articlesData.data.length > 0 ? (
        <div class="articles-grid">
          {articlesData.data.map((article: Article) => (
            <article class="article-card">
              <a href={`/articles/${article.id}`}>
                <div class="article-image-placeholder">
                  <div class="placeholder-content">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z" fill="currentColor"/>
                      <path d="M13.96 12.17L11.06 15.99L9 13.51L6 17H18L13.96 12.17Z" fill="currentColor"/>
                    </svg>
                    <span>صورة المقال</span>
                  </div>
                </div>
                <div class="card-content">
                  <h3>{article.title}</h3>
                  {article.description && <p>{article.description}</p>}
                  <div class="card-meta">
                    <span class="article-id">المقال #{article.id}</span>
                    {article.category && <span class="category">{article.category}</span>}
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      ) : (
        <div class="no-articles">
          <div class="no-articles-content">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z" fill="currentColor"/>
              <path d="M13.96 12.17L11.06 15.99L9 13.51L6 17H18L13.96 12.17Z" fill="currentColor"/>
            </svg>
            <h3>لا توجد مقالات متاحة</h3>
            <p>عذراً، لا توجد مقالات متاحة في الوقت الحالي.</p>
          </div>
        </div>
      )}
    </section>

    <!-- Pagination -->
    {articlesData?.last_page && articlesData.last_page > 1 && (
      <section class="pagination-section">
        <nav class="pagination" aria-label="تنقل بين الصفحات">
          <!-- Previous Page -->
          {articlesData?.prev_page_url ? (
            <a href={`/articles/page/${currentPage - 1}`} class="pagination-btn prev-btn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              السابق
            </a>
          ) : (
            <span class="pagination-btn prev-btn disabled">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              السابق
            </span>
          )}

          <!-- Page Numbers -->
          <div class="pagination-numbers">
            {articlesData?.links && articlesData.links.map((link: PaginationLink, index: number) => {
              if (!link.url) {
                return (
                  <span class="pagination-dots">...</span>
                );
              }
              
              const pageNumber = link.label;
              const isActive = link.active;
              const pageUrl = new URL(link.url);
              const page = pageUrl.searchParams.get('page') || '1';
              
              if (isActive) {
                return (
                  <span class="pagination-number active" aria-current="page">
                    {pageNumber}
                  </span>
                );
              } else {
                return (
                  <a href={`/articles/page/${page}`} class="pagination-number">
                    {pageNumber}
                  </a>
                );
              }
            })}
          </div>

          <!-- Next Page -->
          {articlesData?.next_page_url ? (
            <a href={`/articles/page/${currentPage + 1}`} class="pagination-btn next-btn">
              التالي
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </a>
          ) : (
            <span class="pagination-btn next-btn disabled">
              التالي
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
          )}
        </nav>

        <!-- Page Info -->
        <div class="page-info">
          صفحة {currentPage} من {articlesData?.last_page || 1}
        </div>
      </section>
    )}
  </div>
</BaseLayout>

<style>
  /* Page Header */
  .page-header {
    text-align: center;
    padding: 3rem 0 2rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    margin: -2rem -1rem 3rem -1rem;
    border-radius: 0 0 2rem 2rem;
  }
  
  .page-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }
  
  .page-header p {
    font-size: 1.125rem;
    margin-bottom: 1rem;
    opacity: 0.9;
  }
  
  .articles-count {
    font-size: 0.875rem;
    opacity: 0.8;
    background: rgba(255, 255, 255, 0.1);
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    display: inline-block;
  }

  /* Articles Section */
  .articles-section {
    margin-bottom: 3rem;
  }

  /* Articles Grid */
  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .article-card {
    background: white;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: transform 0.2s, box-shadow 0.2s;
    border: 1px solid #e2e8f0;
  }
  
  .article-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  /* Card Content */
  .article-card a {
    display: block;
    text-decoration: none;
    color: inherit;
  }
  
  .article-image-placeholder {
    width: 100%;
    height: 200px;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .placeholder-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
    color: #64748b;
  }
  
  .placeholder-content svg {
    opacity: 0.5;
  }
  
  .placeholder-content span {
    font-size: 0.875rem;
    font-weight: 500;
  }
  
  .card-content {
    padding: 1.5rem;
  }
  
  .card-content h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    line-height: 1.4;
    color: #1e293b;
  }
  
  .card-content p {
    color: #64748b;
    margin-bottom: 1rem;
    line-height: 1.6;
  }
  
  .card-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.875rem;
    color: #64748b;
  }
  
  .article-id {
    font-weight: 500;
    color: #667eea;
  }
  
  .category {
    background: #f1f5f9;
    color: #475569;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 500;
  }

  /* No Articles State */
  .no-articles {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
  }
  
  .no-articles-content {
    text-align: center;
    color: #64748b;
  }
  
  .no-articles-content svg {
    opacity: 0.3;
    margin-bottom: 1rem;
  }
  
  .no-articles-content h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: #475569;
  }

  /* Pagination */
  .pagination-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin-top: 3rem;
    padding: 2rem 0;
  }
  
  .pagination {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: white;
    padding: 1rem;
    border-radius: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    border: 1px solid #e2e8f0;
  }
  
  .pagination-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s;
    border: 1px solid transparent;
  }
  
  .pagination-btn:not(.disabled) {
    color: #667eea;
    background: #f8fafc;
  }
  
  .pagination-btn:not(.disabled):hover {
    background: #667eea;
    color: white;
    transform: translateY(-1px);
  }
  
  .pagination-btn.disabled {
    color: #94a3b8;
    background: #f1f5f9;
    cursor: not-allowed;
  }
  
  .pagination-numbers {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    margin: 0 1rem;
  }
  
  .pagination-number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 0.5rem;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s;
    color: #64748b;
  }
  
  .pagination-number:not(.active):hover {
    background: #f1f5f9;
    color: #667eea;
  }
  
  .pagination-number.active {
    background: #667eea;
    color: white;
  }
  
  .pagination-dots {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    color: #94a3b8;
    font-weight: 500;
  }
  
  .page-info {
    font-size: 0.875rem;
    color: #64748b;
    background: #f8fafc;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .page-header {
      padding: 2rem 1rem 1.5rem;
      margin: -2rem -0.75rem 2rem -0.75rem;
    }
    
    .page-header h1 {
      font-size: 2rem;
    }
    
    .page-header p {
      font-size: 1rem;
    }
    
    .articles-grid {
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 1.5rem;
      padding: 0 0.5rem;
    }
    
    .card-content {
      padding: 1rem;
    }
    
    .pagination {
      flex-wrap: wrap;
      gap: 0.25rem;
      padding: 0.75rem;
    }
    
    .pagination-numbers {
      margin: 0 0.5rem;
      gap: 0.125rem;
    }
    
    .pagination-number,
    .pagination-dots {
      width: 2rem;
      height: 2rem;
      font-size: 0.875rem;
    }
  }
  
  @media (max-width: 480px) {
    .articles-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .pagination-btn {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
    
    .pagination-btn svg {
      width: 14px;
      height: 14px;
    }
  }
</style>
